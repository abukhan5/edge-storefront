{"version":3,"file":"OrderConfirmation.js","sources":["../../src/hooks/useBreakpoint/useBreakpoint.ts","../../src/reducers/orderConfirmation.ts","../../src/components/OrderConfirmation/OrderConfirmation.tsx","../../node_modules/@adobe/elsie/src/icons/OrderSuccess.svg","../../node_modules/@adobe/elsie/src/icons/WarningFilled.svg","../../src/components/Header/Header.tsx","../../src/components/Header/HeaderSkeleton.tsx","../../src/components/OrderSearchForm/OrderSearchForm.tsx","../../src/components/Details/Details.tsx","../../src/components/Details/DetailsSkeleton.tsx","../../src/components/Footer/Footer.tsx","../../src/components/Footer/FooterSkeleton.tsx","../../src/components/StaticSkeleton/StaticSkeleton.tsx","../../src/components/OrderSummary/OrderSummary.tsx","../../src/components/OrderSummary/OrderSummarySkeleton.tsx","../../src/components/CartSummaryItem/CartSummaryItem.tsx","../../src/data/transforms/transform-order-items.ts","../../src/components/CartSummary/CartSummary.tsx","../../src/components/CartSummary/CartSummarySkeleton.tsx","../../src/containers/OrderConfirmation/OrderConfirmation.tsx"],"sourcesContent":["import { useEffect, useState } from 'preact/hooks';\n\nexport const useBreakpoint = () => {\n  const getBreakpoint = () => {\n    if (window.innerWidth >= 1920) return 'xxlarge';\n    if (window.innerWidth >= 1366) return 'xlarge';\n    if (window.innerWidth >= 1024) return 'large';\n    if (window.innerWidth >= 768) return 'medium';\n\n    return 'small';\n  };\n\n  const [breakpoint, setBreakpoint] = useState<\n    ReturnType<typeof getBreakpoint>\n  >(getBreakpoint());\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>;\n\n    const handleResize = () => {\n      if (timeoutId) clearTimeout(timeoutId);\n      timeoutId = setTimeout(() => setBreakpoint(getBreakpoint()), 50);\n    };\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      if (timeoutId) clearTimeout(timeoutId);\n    };\n  }, []);\n\n  return breakpoint;\n};\n","import {\n  GuestOrderByTokenQuery,\n  GuestOrderQuery,\n} from '@/order-confirmation/__generated__/types';\n\nexport enum Actions {\n  ADD_ORDER_REFERENCE = 'ADD_ORDER_REFERENCE',\n  LOADING = 'LOADING',\n  SET_DETAILS = 'SET_DETAILS',\n  ALERT = 'ALERT',\n  DISMISS_ALERT = 'DISMISS_ALERT',\n}\n\nexport type OrderDetails =\n  | GuestOrderQuery['guestOrder']\n  | GuestOrderByTokenQuery['guestOrderByToken'];\n\ninterface LoadingAction {\n  type: Actions.LOADING;\n}\n\ninterface SetDetailsAction {\n  type: Actions.SET_DETAILS;\n  details: OrderDetails | null;\n  alert?: Alert;\n  fromSearchForm?: boolean;\n}\n\nexport enum AlertType {\n  ERROR = 'error',\n  WARNING = 'warning',\n  SUCCESS = 'success',\n}\n\nexport enum AlertCode {\n  INVALID_ORDER = 'invalid_order',\n  INVALID_SEARCH = 'invalid_search',\n  UNKNOWN = 'unknown_error',\n}\n\nexport type Alert = {\n  type: AlertType;\n  code: AlertCode;\n  message: string;\n};\n\ninterface AlertAction {\n  type: Actions.ALERT;\n  alert: Alert;\n}\n\ninterface DismissAlertAction {\n  type: Actions.DISMISS_ALERT;\n}\n\nexport interface State {\n  isLoading: boolean;\n  details: OrderDetails | null;\n  orderRef?: string;\n  alert?: Alert;\n  isOrderFromSearchForm: boolean;\n}\n\ntype Action =\n  | LoadingAction\n  | SetDetailsAction\n  | AlertAction\n  | DismissAlertAction;\n\nexport function orderConfirmationReducer(state: State, action: Action): State {\n  switch (action.type) {\n    case Actions.LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case Actions.SET_DETAILS:\n      return {\n        ...state,\n        isLoading: false,\n        details: action.details,\n        alert: action.alert,\n        isOrderFromSearchForm: action.fromSearchForm || false,\n      };\n    case Actions.ALERT:\n      return {\n        ...state,\n        isLoading: false,\n        alert: action.alert,\n      };\n    case Actions.DISMISS_ALERT:\n      return {\n        ...state,\n        alert: undefined,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  CartSummary,\n  Details,\n  Footer,\n  Header,\n  OrderSearchFields,\n  OrderSearchForm,\n  OrderSummary,\n  Summary,\n} from '@/order-confirmation/components';\nimport { useBreakpoint } from '@/order-confirmation/hooks/useBreakpoint';\nimport {\n  AlertCode,\n  State,\n} from '@/order-confirmation/reducers/orderConfirmation';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/order-confirmation/components/OrderConfirmation/OrderConfirmation.css';\nimport { FunctionComponent, VNode } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { InputsDefaultValueSetProps } from '@/order-confirmation/containers';\n\nconst ConditionalWrapper: FunctionComponent<{\n  children?: VNode;\n  className: string;\n}> = ({ children, className }) => {\n  const breakpoint = useBreakpoint();\n  return breakpoint !== 'small' ? (\n    <div className={className}>{children}</div>\n  ) : (\n    <>{children}</>\n  );\n};\n\nexport interface OrderConfirmationProps extends HTMLAttributes<HTMLDivElement> {\n  state: State;\n  dismissAlert: () => void;\n  onOrderSearch: (fields: OrderSearchFields) => void;\n  routeHome?: () => string;\n  routeSupport?: () => string;\n  onSignUpClick?: (\n    inputsDefaultValueSetProps: InputsDefaultValueSetProps[]\n  ) => void;\n}\n\n// TODO types\nfunction mapDetailsToSummary(orderDetails: any): Summary | undefined {\n  const total = orderDetails?.total;\n  const isVirtual = orderDetails?.is_virtual;\n\n  if (!total) {\n    return undefined;\n  }\n\n  const grandTotal = total?.grand_total;\n  const subtotal = total?.subtotal;\n  const shipping = total?.total_shipping;\n  const tax = total?.total_tax;\n\n  return {\n    total: {\n      inclTax: {\n        amount: grandTotal?.value || 0,\n        currency: grandTotal?.currency || '',\n      },\n    },\n    subtotal: {\n      amount: subtotal?.value || 0,\n      currency: subtotal?.currency || '',\n      isTaxIncl: false,\n    },\n    shipping: {\n      amount: shipping?.value || 0,\n      currency: shipping?.currency || '',\n      isVirtual,\n    },\n    tax: {\n      amount: tax?.value || 0,\n      currency: tax?.currency || '',\n    },\n  };\n}\n\ntype AsideProps = {\n  state: State;\n};\n\nconst Aside: FunctionComponent<AsideProps> = ({ state }) => {\n  const { isLoading, details } = state;\n  const summary = mapDetailsToSummary(details);\n\n  return (\n    <>\n      <OrderSummary isLoading={isLoading} summary={summary} />\n      <CartSummary isLoading={isLoading} details={details} />\n    </>\n  );\n};\n\nconst AsideElement: FunctionComponent<AsideProps> = ({ state }) => {\n  return (\n    <ConditionalWrapper className=\"order-confirmation__aside\">\n      <Aside state={state} />\n    </ConditionalWrapper>\n  );\n};\n\nconst Main: FunctionComponent<OrderConfirmationProps> = ({\n  state,\n  routeHome,\n  routeSupport,\n  onSignUpClick,\n}) => {\n  const { details, isLoading } = state;\n\n  const billingAddress = details?.billing_address;\n  const customerName = billingAddress?.firstname || '';\n  const customerLastName = billingAddress?.lastname || '';\n  const orderNumber = details?.number || '';\n  const orderStatus = details?.status || '';\n  const orderEmail = details?.email || '';\n\n  const showCustomerHeader = !!customerName && !!orderNumber;\n\n  return (\n    <>\n      {(isLoading || (!isLoading && showCustomerHeader)) && (\n        <Header\n          isLoading={isLoading}\n          customerName={customerName}\n          customerLastName={customerLastName}\n          orderNumber={orderNumber}\n          orderStatus={orderStatus}\n          orderEmail={orderEmail}\n          onSignUpClick={onSignUpClick}\n        />\n      )}\n\n      <Details isLoading={isLoading} orderDetails={details} />\n\n      <Footer\n        isLoading={isLoading}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n      />\n    </>\n  );\n};\n\nconst MainElement: FunctionComponent<OrderConfirmationProps> = ({\n  state,\n  routeHome,\n  routeSupport,\n  dismissAlert,\n  onOrderSearch,\n  onSignUpClick,\n}) => {\n  return (\n    <ConditionalWrapper className=\"order-confirmation__main\">\n      <Main\n        state={state}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n        dismissAlert={dismissAlert}\n        onOrderSearch={onOrderSearch}\n        onSignUpClick={onSignUpClick}\n      />\n    </ConditionalWrapper>\n  );\n};\n\nexport const OrderConfirmation: FunctionComponent<OrderConfirmationProps> = ({\n  className,\n  state,\n  dismissAlert,\n  routeHome,\n  routeSupport,\n  onOrderSearch,\n  onSignUpClick,\n}) => {\n  const { details, alert, isLoading } = state;\n  const hasOrderDetails = !!details?.number;\n  const isInvalidOrder = alert && alert.code === AlertCode.INVALID_ORDER;\n  const isInvalidSearch = alert && alert.code === AlertCode.INVALID_SEARCH;\n\n  if (!isLoading && !hasOrderDetails) {\n    return (\n      <div className={classes(['order-confirmation', className])}>\n        <OrderSearchForm\n          alert={\n            isInvalidOrder || isInvalidSearch\n              ? {\n                  heading: alert.message,\n                  description: '',\n                  type: alert.type,\n                  onDismiss: dismissAlert,\n                }\n              : undefined\n          }\n          onOrderSearch={onOrderSearch}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className={classes(['order-confirmation', className])}>\n      <MainElement\n        state={state}\n        dismissAlert={dismissAlert}\n        routeHome={routeHome}\n        routeSupport={routeSupport}\n        onOrderSearch={onOrderSearch}\n        onSignUpClick={onSignUpClick}\n      />\n      <AsideElement state={state} />\n    </div>\n  );\n};\n","import * as React from \"react\";\nconst SvgOrderSuccess = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"g\", { clipPath: \"url(#clip0_4797_15077)\" }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M10.15 20.85L1.5 17.53V6.63L10.15 10V20.85Z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M1.5 6.63001L10.15 3.20001L18.8 6.63001L10.15 10L1.5 6.63001Z\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M6.17969 4.77002L14.8297 8.15002V11.47\", stroke: \"currentColor\", strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", d: \"M18.7896 12.64V6.63L10.1396 10V20.85L14.8296 19.05\", stroke: \"currentColor\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { className: \"success-icon\", vectorEffect: \"non-scaling-stroke\", d: \"M15.71 17.26C15.71 15.38 17.23 13.86 19.11 13.86C20.99 13.86 22.51 15.38 22.51 17.26C22.51 19.14 20.99 20.66 19.11 20.66C17.23 20.66 15.71 19.14 15.71 17.26Z\", stroke: \"currentColor\" }), /* @__PURE__ */ React.createElement(\"path\", { className: \"success-icon\", vectorEffect: \"non-scaling-stroke\", d: \"M17.4805 17.49L18.5605 18.41L20.7205 16.33\", stroke: \"currentColor\", strokeLinecap: \"square\", strokeLinejoin: \"round\" })), /* @__PURE__ */ React.createElement(\"defs\", null, /* @__PURE__ */ React.createElement(\"clipPath\", { id: \"clip0_4797_15077\" }, /* @__PURE__ */ React.createElement(\"rect\", { width: 22, height: 18.65, fill: \"white\", transform: \"translate(1 2.70001)\" }))));\nexport default SvgOrderSuccess;\n","import * as React from \"react\";\nconst SvgWarningFilled = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { vectorEffect: \"non-scaling-stroke\", fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M1 20.8953L12.1922 1.5L23.395 20.8953H1ZM13.0278 13.9638L13.25 10.0377V9H11.25V10.0377L11.4722 13.9638H13.0278ZM11.2994 16V17.7509H13.2253V16H11.2994Z\", fill: \"currentColor\" }));\nexport default SvgWarningFilled;\n","import { FunctionComponent } from 'preact';\nimport { Button, Icon } from '@adobe/elsie/components';\nimport { OrderSuccess } from '@adobe/elsie/icons';\nimport { Text } from '@adobe/elsie/i18n';\nimport { HeaderSkeleton } from '@/order-confirmation/components';\nimport '@/order-confirmation/components/Header/Header.css';\nimport { InputsDefaultValueSetProps } from '@/order-confirmation/containers';\n\nexport interface HeaderProps {\n  isLoading: boolean;\n  customerName?: string;\n  customerLastName?: string;\n  orderNumber?: string;\n  orderStatus?: string;\n  orderEmail?: string;\n  onSignUpClick?: (\n    inputsDefaultValueSetProps: InputsDefaultValueSetProps[]\n  ) => void;\n}\nexport const Header: FunctionComponent<HeaderProps> = ({\n  isLoading,\n  customerName,\n  customerLastName,\n  orderNumber,\n  orderStatus,\n  orderEmail,\n  onSignUpClick,\n}) => {\n  if (isLoading) {\n    return <HeaderSkeleton />;\n  }\n\n  return (\n    <div className=\"order-confirmation-header order-confirmation__card\">\n      <Icon\n        source={OrderSuccess}\n        size=\"64\"\n        className=\"order-confirmation-header__icon\"\n      />\n\n      <h1 className=\"order-confirmation-header__title\">\n        {customerName ? (\n          <Text\n            id={'OrderConfirmation.Header.title'}\n            fields={{ name: customerName }}\n          />\n        ) : (\n          <Text id={'OrderConfirmation.Header.defaultTitle'} />\n        )}\n      </h1>\n\n      {orderNumber && (\n        <p className=\"order-confirmation-header__order\">\n          <Text\n            id={'OrderConfirmation.Header.order'}\n            fields={{ order: orderNumber }}\n          />\n          {orderStatus !== undefined && orderStatus !== '' && (\n            <span className=\"order-confirmation-header__status\">\n              {' '}\n              ({orderStatus})\n            </span>\n          )}\n        </p>\n      )}\n\n      {onSignUpClick && (\n        <div className=\"order-confirmation-create-account\">\n          <p className=\"order-confirmation-create-account__message\">\n            <Text id={'OrderConfirmation.Header.CreateAccount.message'} />\n          </p>\n          <Button\n            data-testid=\"create-account-button\"\n            className=\"order-confirmation-create-account__button\"\n            size=\"medium\"\n            variant=\"secondary\"\n            type=\"submit\"\n            onClick={() =>\n              onSignUpClick([\n                { code: 'firstname', defaultValue: customerName || '' },\n                { code: 'lastname', defaultValue: customerLastName || '' },\n                { code: 'email', defaultValue: orderEmail || '' },\n              ])\n            }\n          >\n            <Text id={'OrderConfirmation.Header.CreateAccount.button'} />\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const HeaderSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      data-testid=\"order-confirmation-header-skeleton\"\n      className={'order-confirmation-header'}\n    >\n      <SkeletonRow variant={'empty'} size=\"xlarge\" fullWidth={true} />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow variant={'empty'} size=\"medium\" />\n      <SkeletonRow size=\"small\" fullWidth={true} />\n      <SkeletonRow variant={'heading'} size=\"xsmall\" fullWidth={true} />\n    </Skeleton>\n  );\n};\n","import {\n  Button,\n  Card,\n  Field,\n  Icon,\n  InLineAlert,\n  Input,\n} from '@adobe/elsie/components';\nimport { InLineAlertProps } from '@adobe/elsie/components/InLineAlert/InLineAlert';\nimport { Text, useText } from '@adobe/elsie/i18n';\nimport { WarningFilled } from '@adobe/elsie/icons';\nimport { getFormValues } from '@adobe/elsie/lib';\nimport { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport '@/order-confirmation/components/OrderSearchForm/OrderSearchForm.css';\n\nexport interface OrderSearchFields {\n  email: string;\n  number: string;\n  postcode?: string;\n}\n\nexport interface OrderSearchFormProps extends HTMLAttributes<HTMLDivElement> {\n  alert?: InLineAlertProps;\n  onOrderSearch?: (fields: OrderSearchFields) => void;\n}\n\nexport const OrderSearchForm: FunctionComponent<OrderSearchFormProps> = ({\n  alert,\n  onOrderSearch,\n}) => {\n  const translations = useText({\n    email: 'OrderConfirmation.OrderSearchForm.email',\n    postcode: 'OrderConfirmation.OrderSearchForm.postcode',\n    number: 'OrderConfirmation.OrderSearchForm.orderNumber',\n  });\n\n  const handleSubmit = (event: Event) => {\n    event.preventDefault();\n    const formValues = getFormValues(event.target as HTMLFormElement);\n    onOrderSearch?.(formValues as OrderSearchFields);\n  };\n\n  return (\n    <Card\n      variant={'secondary'}\n      className={\n        'order-confirmation-order-search-form order-confirmation__card'\n      }\n    >\n      <h2 className={'order-confirmation-order-search-form__title'}>\n        <Text id={'OrderConfirmation.OrderSearchForm.title'} />\n      </h2>\n\n      <p>\n        <Text id={'OrderConfirmation.OrderSearchForm.description'} />\n      </p>\n\n      {alert && (\n        <InLineAlert\n          className={'order-confirmation-order-search-form__alert'}\n          data-testid=\"order-confirmation-alert\"\n          icon={<Icon source={WarningFilled} />}\n          {...alert}\n        />\n      )}\n\n      <form\n        className={'order-confirmation-order-search-form__fields'}\n        onSubmit={handleSubmit}\n      >\n        <div className={'order-confirmation-order-search-form__fields-columns'}>\n          <Field>\n            <Input\n              id=\"order-email\"\n              name=\"email\"\n              type={'email'}\n              autocomplete={'email'}\n              placeholder={translations.email}\n              floatingLabel={translations.email}\n              required={true}\n              aria-label={translations.email}\n              aria-required={true}\n            />\n          </Field>\n\n          <Field>\n            <Input\n              id=\"postcode\"\n              name=\"postcode\"\n              type={'text'}\n              autocomplete={'postal-code'}\n              placeholder={translations.postcode}\n              floatingLabel={translations.postcode}\n              required={false}\n              aria-label={translations.postcode}\n              aria-required={true}\n            />\n          </Field>\n        </div>\n\n        <Field>\n          <Input\n            id=\"order-number\"\n            name=\"number\"\n            type={'text'}\n            placeholder={translations.number}\n            floatingLabel={translations.number}\n            required={true}\n            aria-label={translations.number}\n            aria-required={true}\n          />\n        </Field>\n\n        <Button\n          className={'order-confirmation-order-search-form__button'}\n          size={'medium'}\n          variant={'primary'}\n          key={'logIn'}\n          type={'submit'}\n        >\n          <Text id={'OrderConfirmation.OrderSearchForm.button'} />\n        </Button>\n      </form>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport '@/order-confirmation/components/Details/Details.css';\nimport { Price, Card } from '@adobe/elsie/components';\nimport { Text } from '@adobe/elsie/i18n';\nimport { OrderDetails } from '@/order-confirmation/reducers/orderConfirmation';\nimport {\n  StaticSkeleton,\n  DetailsSkeleton,\n} from '@/order-confirmation/components';\n\nexport interface DetailsProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean;\n  orderDetails: OrderDetails | null;\n}\n\nexport const Details: FunctionComponent<DetailsProps> = ({\n  isLoading,\n  orderDetails,\n}) => {\n  if (isLoading) {\n    return <DetailsSkeleton />;\n  }\n\n  const hasOrderDetails = orderDetails && orderDetails?.number;\n\n  const contactDetails = orderDetails?.email || '';\n  const hasToDisplayContactDetails = orderDetails && contactDetails !== '';\n\n  const shippingAddress = orderDetails?.shipping_address;\n  const hasToDisplayShippingAddress = orderDetails && shippingAddress !== null;\n\n  const billingAddress = orderDetails?.billing_address;\n  const hasToDisplayBillingAddress = orderDetails && billingAddress !== null;\n\n  const shippingMethod = orderDetails?.shipping_method;\n  const shippingCost = orderDetails?.total?.total_shipping?.value;\n  const shippingCurrency = orderDetails?.total?.total_shipping?.currency;\n  const hasToDisplayShippingMethod =\n    orderDetails && shippingMethod && shippingCurrency && shippingCost != null;\n\n  const paymentMethods = orderDetails?.payment_methods;\n  const hasPaymentMethod = paymentMethods && paymentMethods.length > 0;\n  const selectedPaymentMethod = hasPaymentMethod ? paymentMethods[0]?.name : '';\n  const hasToDisplayPaymentMethod =\n    orderDetails && hasPaymentMethod && selectedPaymentMethod !== '';\n\n  return (\n    <Card\n      data-testid=\"order-confirmation-details\"\n      variant={'secondary'}\n      className={'order-confirmation-details order-confirmation__card'}\n    >\n      <div className={'order-confirmation-details__header'}>\n        <h2 className={'order-confirmation-details__title'}>\n          <Text id={'OrderConfirmation.Details.title'} />\n        </h2>\n      </div>\n\n      <div className={'order-confirmation-details__contact'}>\n        {(!orderDetails || hasToDisplayContactDetails) && (\n          <h3>\n            <Text id={'OrderConfirmation.Details.contact'} />\n          </h3>\n        )}\n\n        {hasToDisplayContactDetails && <p>{contactDetails}</p>}\n\n        {!hasOrderDetails && (\n          <StaticSkeleton\n            rows={1}\n            data-testid=\"order-confirmation-details-contact-skeleton\"\n          />\n        )}\n      </div>\n\n      <div className={'order-confirmation-details__information'}>\n        <div className={'order-confirmation-details__shipping_address'}>\n          {(!hasOrderDetails || hasToDisplayShippingAddress) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.shippingAddress'} />\n            </h3>\n          )}\n\n          {hasToDisplayShippingAddress && (\n            <>\n              <p>\n                {shippingAddress?.firstname} {shippingAddress?.lastname}\n              </p>\n\n              {shippingAddress?.street.map((street, index) => (\n                <p key={index}>{street}</p>\n              ))}\n\n              <p>\n                {shippingAddress?.city} {shippingAddress?.region}{' '}\n                {shippingAddress?.postcode}, {shippingAddress?.country_code}\n              </p>\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={3}\n              data-testid=\"order-confirmation-shipping-address-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__billing_address'}>\n          {(!hasOrderDetails || hasToDisplayBillingAddress) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.billingAddress'} />\n            </h3>\n          )}\n\n          {hasToDisplayBillingAddress && (\n            <>\n              <p>\n                {billingAddress?.firstname} {billingAddress?.lastname}\n              </p>\n\n              {billingAddress?.street.map((street, index) => (\n                <p key={index}>{street}</p>\n              ))}\n\n              <p>\n                {billingAddress?.city} {billingAddress?.region}{' '}\n                {billingAddress?.postcode}, {billingAddress?.country_code}\n              </p>\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={3}\n              data-testid=\"order-confirmation-billing-address-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__shipping-method'}>\n          {(!hasOrderDetails || hasToDisplayShippingMethod) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.shippingMethod'} />\n            </h3>\n          )}\n\n          {hasToDisplayShippingMethod && (\n            <>\n              {shippingCost === 0 ? (\n                <p className=\"order-confirmation-order-summary__price\">\n                  <Text id=\"OrderConfirmation.Details.freeShipping\" />\n                </p>\n              ) : (\n                <p>\n                  <Price amount={shippingCost} currency={shippingCurrency} />{' '}\n                  {shippingMethod}\n                </p>\n              )}\n            </>\n          )}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={1}\n              data-testid=\"order-confirmation-details-shipping-method-skeleton\"\n            />\n          )}\n        </div>\n\n        <div className={'order-confirmation-details__payment-method'}>\n          {(!hasOrderDetails || hasToDisplayPaymentMethod) && (\n            <h3>\n              <Text id={'OrderConfirmation.Details.paymentMethod'} />\n            </h3>\n          )}\n\n          {hasToDisplayPaymentMethod && <p>{selectedPaymentMethod}</p>}\n\n          {!hasOrderDetails && (\n            <StaticSkeleton\n              rows={1}\n              data-testid=\"order-confirmation-details-payment-method-skeleton\"\n            />\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Card, Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const DetailsSkeleton: FunctionComponent = () => {\n  return (\n    <Card variant={'secondary'} className={'order-confirmation-details'}>\n      <Skeleton data-testid=\"order-confirmation-details-skeleton\">\n        <SkeletonRow variant={'heading'} size=\"medium\" fullWidth={true} />\n        <SkeletonRow size=\"medium\" />\n        <SkeletonRow variant={'empty'} size=\"medium\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n        <SkeletonRow size=\"xlarge\" />\n      </Skeleton>\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport { Button } from '@adobe/elsie/components';\nimport { Text } from '@adobe/elsie/i18n';\nimport { FooterSkeleton } from '@/order-confirmation/components';\nimport '@/order-confirmation/components/Footer/Footer.css';\n\nexport interface FooterProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean;\n  routeHome?: () => string;\n  routeSupport?: () => string;\n}\n\nexport const Footer: FunctionComponent<FooterProps> = ({\n  isLoading,\n  className,\n  routeHome,\n  routeSupport,\n  ...props\n}) => {\n  if (isLoading) {\n    return <FooterSkeleton />;\n  }\n\n  return (\n    <div\n      className={classes(['order-confirmation-footer', className])}\n      {...props}\n    >\n      {routeHome?.() && (\n        <Button\n          data-testid=\"order-confirmation-footer__continue-button\"\n          className=\"order-confirmation-footer__continue-button\"\n          size={'medium'}\n          variant={'primary'}\n          key={'continueShopping'}\n          type={'submit'}\n          href={routeHome?.()}\n        >\n          <Text id={'OrderConfirmation.Footer.continueShopping'} />\n        </Button>\n      )}\n\n      <p className=\"order-confirmation-footer__contact-support\">\n        <Text id={'OrderConfirmation.Footer.help'} />{' '}\n        {routeSupport?.() && (\n          <a\n            href={routeSupport?.()}\n            rel={'noreferrer'}\n            className=\"order-confirmation-footer__contact-support-link\"\n            data-testid=\"order-confirmation-footer__contact-support-link\"\n          >\n            <Text id={'OrderConfirmation.Footer.contactSupport'} />\n          </a>\n        )}\n      </p>\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const FooterSkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton className={'order-confirmation-footer'}>\n      <SkeletonRow size=\"small\" fullWidth={true} />\n      <SkeletonRow variant={'heading'} size=\"xsmall\" fullWidth={true} />\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\nimport '@/order-confirmation/components/StaticSkeleton/StaticSkeleton.css';\nimport { HTMLAttributes } from 'preact/compat';\n\nexport interface StaticSkeletonProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'size'> {\n  rows: number;\n  size?: 'xsmall' | 'small' | 'medium' | 'large' | 'xlarge';\n}\nexport const StaticSkeleton: FunctionComponent<StaticSkeletonProps> = ({\n  rows,\n  size = 'xsmall',\n  ...props\n}) => {\n  return (\n    <Skeleton className={'static-skeleton'} {...props}>\n      {Array.from(Array(rows).keys()).map((i) => (\n        <SkeletonRow key={i} variant={'heading'} size={size} fullWidth={true} />\n      ))}\n    </Skeleton>\n  );\n};\n","import {\n  OrderSummarySkeleton,\n  StaticSkeleton,\n} from '@/order-confirmation/components';\nimport { Card, Divider, Price } from '@adobe/elsie/components';\nimport { Text } from '@adobe/elsie/i18n';\nimport { classes } from '@adobe/elsie/lib';\nimport '@/order-confirmation/components/OrderSummary/OrderSummary.css';\nimport { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\n\nexport type CartTaxItem = {\n  label: string;\n  amount: {\n    value?: number;\n    currency?: string;\n  };\n};\n\nexport type Summary = {\n  total: {\n    inclTax: {\n      amount: number;\n      currency: string;\n    };\n    exclTax?: {\n      amount: number;\n      currency: string;\n    };\n  };\n  subtotal: {\n    amount: number;\n    currency: string;\n    isTaxIncl: boolean;\n  };\n  shipping?: {\n    amount: number;\n    currency: string;\n    isVirtual?: boolean;\n  };\n  tax?: {\n    amount: number;\n    currency: string;\n    breakdown?: CartTaxItem[];\n  };\n};\n\nexport interface OrderSummaryProps\n  extends Omit<HTMLAttributes<HTMLDivElement>, 'summary'> {\n  isLoading: boolean;\n  summary?: Summary;\n  variant?: 'primary' | 'secondary';\n}\n\nexport const OrderSummary: FunctionComponent<OrderSummaryProps> = ({\n  className,\n  isLoading,\n  summary,\n  variant = 'secondary',\n}) => {\n  if (isLoading) {\n    return <OrderSummarySkeleton />;\n  }\n\n  const { total, subtotal, shipping, tax } = summary ?? {};\n\n  return (\n    <Card\n      className={classes(['order-confirmation-order-summary', className])}\n      variant={variant}\n    >\n      {/* move heading to elsie? */}\n      <h2 className=\"order-confirmation-order-summary__title\">\n        <Text id=\"OrderConfirmation.OrderSummary.title\" />\n      </h2>\n\n      <Divider variant=\"primary\" />\n\n      {subtotal != undefined ? (\n        <div\n          data-testid=\"order-summary-subtotal\"\n          className=\"order-confirmation-order-summary__row\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.subtotal\" />\n          </p>\n          <Price\n            amount={subtotal?.amount}\n            currency={subtotal?.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-subtotal-skeleton\"\n        />\n      )}\n\n      {subtotal?.isTaxIncl && (\n        <div\n          data-testid=\"order-summary-subtotal-incl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.includingTaxes\" />\n          </p>\n        </div>\n      )}\n\n      {shipping != undefined ? (\n        shipping.isVirtual ? null : (\n          <div\n            data-testid=\"order-summary-shipping\"\n            className=\"order-confirmation-order-summary__row\"\n          >\n            <p>\n              <Text id=\"OrderConfirmation.OrderSummary.shipping\" />\n            </p>\n\n            {shipping.amount === 0 ? (\n              <p className=\"order-confirmation-order-summary__price\">\n                <Text id=\"OrderConfirmation.OrderSummary.freeShipping\" />\n              </p>\n            ) : (\n              <Price\n                amount={shipping.amount}\n                currency={shipping.currency}\n                className={classes([\n                  'order-confirmation-order-summary__price',\n                  className,\n                ])}\n              />\n            )}\n          </div>\n        )\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-shipping-skeleton\"\n        />\n      )}\n\n      {tax != undefined && !tax.breakdown && (\n        <div\n          data-testid=\"order-summary-tax\"\n          className=\"order-confirmation-order-summary__row\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.tax\" />\n          </p>\n          <Price\n            amount={tax.amount}\n            currency={tax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      )}\n\n      {tax != undefined && tax.breakdown && (\n        <>\n          <Divider variant=\"secondary\" />\n\n          <div className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--margin-bottom\">\n            <p>\n              <Text id=\"OrderConfirmation.OrderSummary.taxBreakdown\" />\n            </p>\n          </div>\n\n          {tax.breakdown.map((tax) => (\n            <div\n              data-testid=\"order-summary-tax-breakdown\"\n              key={tax.label}\n              className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n            >\n              <p>{tax.label}</p>\n\n              <Price\n                amount={tax.amount.value!}\n                currency={tax.amount.currency!}\n                className={classes([\n                  'order-confirmation-order-summary__price',\n                  className,\n                ])}\n              />\n            </div>\n          ))}\n\n          <div\n            data-testid=\"order-summary-tax-breakdown-total\"\n            className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--strong order-confirmation-order-summary__row--margin-top\"\n          >\n            <p>\n              <Text id=\"OrderConfirmation.OrderSummary.taxTotal\" />\n            </p>\n\n            <Price\n              amount={tax.amount}\n              currency={tax.currency}\n              className={classes([\n                'order-confirmation-order-summary__price',\n                className,\n              ])}\n            />\n          </div>\n\n          <Divider variant=\"secondary\" />\n        </>\n      )}\n\n      {total != undefined ? (\n        <div\n          data-testid=\"order-summary-total-incl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--emphasized\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.total\" />\n          </p>\n\n          <Price\n            amount={total?.inclTax.amount}\n            currency={total?.inclTax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      ) : (\n        <StaticSkeleton\n          rows={1}\n          data-testid=\"order-confirmation-order-summary-total-skeleton\"\n        />\n      )}\n\n      {total?.exclTax != undefined && (\n        <div\n          data-testid=\"order-summary-total-excl-tax\"\n          className=\"order-confirmation-order-summary__row order-confirmation-order-summary__row--muted\"\n        >\n          <p>\n            <Text id=\"OrderConfirmation.OrderSummary.totalExclTax\" />\n          </p>\n\n          <Price\n            amount={total.exclTax.amount}\n            currency={total.exclTax.currency}\n            className={classes([\n              'order-confirmation-order-summary__price',\n              className,\n            ])}\n          />\n        </div>\n      )}\n    </Card>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow } from '@adobe/elsie/components';\n\nexport const OrderSummarySkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      data-testid=\"order-confirmation-order-summary-skeleton\"\n      className={'order-confirmation-order-summary'}\n    >\n      <SkeletonRow variant=\"heading\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"empty\" size=\"small\" />\n      <SkeletonRow variant=\"heading\" size=\"small\" fullWidth={true} lines={3} />\n    </Skeleton>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { classes } from '@adobe/elsie/lib';\nimport { useText } from '@adobe/elsie/i18n';\nimport '@/order-confirmation/components/CartSummaryItem/CartSummaryItem.css';\nimport { CartItem, Image, Price } from '@adobe/elsie/components';\nimport { transformItems } from '@/order-confirmation/data/transforms/transform-order-items';\n\nexport interface CartSummaryItemProps extends HTMLAttributes<HTMLDivElement> {\n  item: ReturnType<typeof transformItems>;\n  taxIncluded?: boolean;\n}\n\nexport const CartSummaryItem: FunctionComponent<CartSummaryItemProps> = ({\n  className,\n  item,\n  taxIncluded = false,\n}) => {\n  const translations = useText({\n    Sender: 'OrderConfirmation.CartSummary.GiftCard.sender',\n    Recipient: 'OrderConfirmation.CartSummary.GiftCard.recipient',\n  });\n\n  let price = item.regularPrice;\n  let total = item.total;\n\n  if (taxIncluded) {\n    price = item.priceInclTax;\n    total = item.totalInclTax;\n  }\n\n  const configurations = {\n    ...('configurableOptions' in item ? item.configurableOptions : {}),\n    ...('senderName' in item && item.senderName\n      ? { [translations.Sender]: item.senderName }\n      : {}),\n    ...('senderEmail' in item && item.senderEmail\n      ? { [translations.Sender]: item.senderEmail }\n      : {}),\n    ...('recipientName' in item && item.recipientName\n      ? { [translations.Recipient]: item.recipientName }\n      : {}),\n    ...('recipientEmail' in item && item.recipientEmail\n      ? { [translations.Recipient]: item.recipientEmail }\n      : {}),\n  };\n\n  return (\n    <div\n      className={classes(['order-confirmation-cart-summary-item', className])}\n    >\n      <CartItem\n        data-testid=\"cart-summary-item\"\n        key={item.uid}\n        taxIncluded={taxIncluded}\n        title={<div data-testid=\"product-name\">{item.name}</div>}\n        sku={<div>{item.sku}</div>}\n        quantity={item.quantity!}\n        image={\n          <Image\n            src={item.image.src!}\n            alt={item.image.alt!}\n            loading=\"lazy\"\n            width=\"80\"\n            height=\"80\"\n            params={{ width: 80 }}\n          />\n        }\n        configurations={configurations}\n        price={\n          <Price\n            amount={item.regularPrice.value}\n            currency={price.currency}\n            weight=\"normal\"\n          />\n        }\n        total={\n          <>\n            <Price\n              amount={item.regularPrice.value * item.quantity!}\n              currency={price.currency}\n              variant={item.discounted ? 'strikethrough' : 'default'}\n            />\n\n            {item.discounted && (\n              <Price amount={total.value} currency={total.currency!} sale />\n            )}\n          </>\n        }\n      />\n    </div>\n  );\n};\n","import { GuestOrderDataFragment } from '@/order-confirmation/__generated__/types';\n\ntype NonNullableItems = NonNullable<GuestOrderDataFragment['items']>;\ntype NonNullableItem = NonNullable<NonNullableItems[number]>;\n\nexport function transformItems(item: NonNullableItem) {\n  return {\n    uid: item.id,\n    quantity: item.quantity_ordered,\n    sku: item.product!.sku,\n    name: item.product!.name,\n    image: {\n      src: item.product!.thumbnail!.url,\n      alt: item.product!.thumbnail!.label,\n    },\n    price: {\n      value: item.product_sale_price.value,\n      currency: item.product_sale_price.currency,\n    },\n    priceInclTax: {\n      value: item.product_sale_price.value!,\n      currency: item.product_sale_price.currency!,\n    },\n    total: {\n      value: item.product_sale_price.value! * item.quantity_ordered!,\n      currency: item.product_sale_price.currency,\n    },\n    totalInclTax: {\n      value: item.product_sale_price.value! * item.quantity_ordered!,\n      currency: item.product_sale_price.currency,\n    },\n    discount: {\n      value: 0,\n      currency: item.product_sale_price.currency,\n    },\n    regularPrice: {\n      value: item.product!.price_range.maximum_price!.regular_price.value!,\n      currency:\n        item.product!.price_range.maximum_price!.regular_price.currency!,\n    },\n    discounted:\n      item.product!.price_range.maximum_price!.regular_price.value! *\n        item.quantity_ordered! !==\n      item.product_sale_price.value! * item.quantity_ordered!,\n    configurableOptions: transformConfigurableOptions(item),\n    senderName:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.sender_name\n        : undefined,\n    senderEmail:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.sender_email!\n        : undefined,\n    recipientEmail:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.recipient_email!\n        : undefined,\n    recipientName:\n      item.__typename === 'GiftCardOrderItem'\n        ? item.gift_card!.recipient_name\n        : undefined,\n  };\n}\nfunction transformConfigurableOptions(item: NonNullableItem) {\n  if (!('selected_options' in item)) return;\n\n  const configurableOptions: Record<string, string> = {};\n\n  for (const option of item.selected_options!) {\n    configurableOptions[option!.label] = option!.value;\n  }\n\n  return configurableOptions;\n}\n","import { FunctionComponent } from 'preact';\nimport { HTMLAttributes } from 'preact/compat';\nimport { Text } from '@adobe/elsie/i18n';\nimport { Card, Divider } from '@adobe/elsie/components';\nimport '@/order-confirmation/components/CartSummary/CartSummary.css';\nimport { CartSummarySkeleton } from '@/order-confirmation/components/CartSummary';\nimport { CartSummaryItem } from '@/order-confirmation/components/CartSummaryItem';\nimport { transformItems } from '@/order-confirmation/data/transforms/transform-order-items';\nimport { State } from '@/order-confirmation/reducers';\n\n// TODO details type\nexport interface CartSummaryProps extends HTMLAttributes<HTMLDivElement> {\n  isLoading: boolean;\n  details: State['details'];\n}\n\nexport const CartSummary: FunctionComponent<CartSummaryProps> = ({\n  isLoading,\n  details,\n}) => {\n  if (isLoading) {\n    return <CartSummarySkeleton />;\n  }\n\n  // TODO tax included\n  const taxIncluded = false;\n  const items = details!.items!;\n\n  // const totalQuantity = details?.items?.reduce(\n  //   (total: number, item: any) => total + item.quantity_ordered,\n  //   0\n  // );\n\n  // TODO: Quantity should be based on config: https://jira.corp.adobe.com/browse/USF-1089\n  const totalQuantity = items.length;\n\n  return (\n    <div className=\"order-confirmation-cart-summary\">\n      <Card variant=\"secondary\">\n        <div className=\"order-confirmation-cart-summary__heading\">\n          <h2 className={'order-confirmation-cart-summary__title'}>\n            <Text id=\"OrderConfirmation.CartSummary.title\" /> ({totalQuantity})\n          </h2>\n        </div>\n        <Divider\n          className=\"order-confirmation-cart-summary__divider-top\"\n          variant=\"primary\"\n        />\n\n        <div className=\"order-confirmation-cart-summary__items\">\n          {items?.map((item: any) => {\n            const cartItem = transformItems(item);\n            return (\n              <CartSummaryItem\n                key={cartItem?.uid}\n                item={cartItem}\n                taxIncluded={taxIncluded}\n              />\n            );\n          })}\n        </div>\n      </Card>\n    </div>\n  );\n};\n","import { FunctionComponent } from 'preact';\nimport { Skeleton, SkeletonRow, CartItemSkeleton } from '@adobe/elsie/components';\n\nexport const CartSummarySkeleton: FunctionComponent = () => {\n  return (\n    <Skeleton\n      data-testid=\"cart-summary-skeleton\"\n      className=\"order-confirmation-cart-summary\"\n      style={{ gridTemplateColumns: '1fr' }}\n    >\n      <SkeletonRow variant=\"heading\" fullWidth={true} size=\"medium\" />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n      <CartItemSkeleton />\n    </Skeleton>\n  );\n};\n","import {\n  guestOrder,\n  GuestOrderInput,\n  guestOrderByToken,\n  customerOrder,\n} from '@/order-confirmation/api';\nimport {\n  OrderSearchFields,\n  OrderConfirmation as Component,\n} from '@/order-confirmation/components';\nimport {\n  Actions,\n  Alert,\n  AlertCode,\n  AlertType,\n  orderConfirmationReducer,\n} from '@/order-confirmation/reducers/orderConfirmation';\nimport { useText } from '@adobe/elsie/i18n';\nimport { Container } from '@adobe/elsie/lib';\nimport {\n  HTMLAttributes,\n  useCallback,\n  useState,\n  useEffect,\n  useReducer,\n} from 'preact/compat';\nimport { events } from '@adobe/event-bus';\n\nexport interface InputsDefaultValueSetProps {\n  code: string;\n  defaultValue: string;\n}\n\nexport interface OrderConfirmationProps extends HTMLAttributes<HTMLDivElement> {\n  orderRef?: string;\n  routeHome?: () => string;\n  routeSupport?: () => string;\n  onSignUpClick?: (\n    inputsDefaultValueSetProps: InputsDefaultValueSetProps[]\n  ) => void;\n}\n\nfunction useOrderConfirmation(orderRef?: string) {\n  const [state, dispatch] = useReducer(orderConfirmationReducer, {\n    isLoading: false,\n    orderRef,\n    details: null,\n    isOrderFromSearchForm: false,\n  });\n  const [authenticated, setAuthenticated] = useState<boolean | undefined>();\n\n  const translations = useText({\n    invalidOrder: 'OrderConfirmation.Errors.invalidOrder',\n    invalidSearch: 'OrderConfirmation.Errors.invalidSearch',\n    pageNotFound: 'OrderConfirmation.Errors.pageNotFound',\n    unknown: 'OrderConfirmation.Errors.unknown',\n  });\n\n  const buildAlert = useCallback(\n    (message: string): Alert | undefined => {\n      switch (message) {\n        case 'Invalid order':\n        case 'Order not found':\n        case \"We couldn't locate an order with the information provided.\":\n          return {\n            type: AlertType.WARNING,\n            code: AlertCode.INVALID_ORDER,\n            message: translations.invalidOrder,\n          };\n        case 'Invalid search':\n          return {\n            type: AlertType.WARNING,\n            code: AlertCode.INVALID_SEARCH,\n            message: translations.invalidSearch,\n          };\n      }\n    },\n    [translations.invalidOrder, translations.invalidSearch]\n  );\n\n  const dismissAlert = () => {\n    dispatch({ type: Actions.DISMISS_ALERT });\n  };\n\n  const handleOrderSearch = function (fields: OrderSearchFields) {\n    fetchFormOrderDetails(fields);\n  };\n\n  useEffect(() => {\n    const customerAuthenticated = events.on(\n      'authenticated',\n      (isAuthenticated) => {\n        setAuthenticated(isAuthenticated);\n      },\n      { eager: true }\n    );\n    return () => {\n      customerAuthenticated?.off();\n    };\n  }, []);\n\n  const fetchFormOrderDetails = useCallback(\n    (fields?: OrderSearchFields) => {\n      guestOrder(fields as GuestOrderInput)\n        .then((details) => {\n          // order number is only returned if valid order inputs are provided\n          const hasOrderDetails = !!details?.number;\n\n          const alert = hasOrderDetails\n            ? undefined\n            : buildAlert('Invalid search');\n\n          dispatch({\n            type: Actions.SET_DETAILS,\n            fromSearchForm: true,\n            alert,\n            details,\n          });\n        })\n        .catch(() => {\n          const alert = buildAlert('Invalid search');\n\n          dispatch({\n            type: Actions.SET_DETAILS,\n            details: null,\n            alert,\n          });\n        });\n    },\n    [buildAlert]\n  );\n\n  const fetchOrderDetails = useCallback(\n    (orderRef: string) => {\n      const fetchOrderApiCall = authenticated\n        ? customerOrder\n        : guestOrderByToken;\n\n      fetchOrderApiCall(orderRef)\n        .then((details) => {\n          // order number is only returned if valid order inputs are provided\n          const hasOrderDetails = !!details?.number;\n\n          const alert = hasOrderDetails\n            ? undefined\n            : buildAlert('Invalid order');\n\n          dispatch({\n            type: Actions.SET_DETAILS,\n            details,\n            alert,\n          });\n        })\n        .catch((error) => {\n          const knownAlert = buildAlert(error.message);\n\n          if (!knownAlert) {\n            console.error(error);\n            return;\n          }\n\n          dispatch({\n            type: Actions.ALERT,\n            alert: knownAlert,\n          });\n        });\n    },\n    [authenticated, buildAlert]\n  );\n\n  useEffect(() => {\n    if (!state.orderRef || authenticated === undefined) return;\n\n    dispatch({ type: Actions.LOADING });\n\n    fetchOrderDetails(state.orderRef);\n  }, [authenticated, fetchOrderDetails, state.orderRef]);\n\n  return {\n    state,\n    authenticated,\n    handleOrderSearch,\n    dismissAlert,\n  };\n}\n\nexport const OrderConfirmation: Container<OrderConfirmationProps> = ({\n  orderRef,\n  routeHome,\n  routeSupport,\n  onSignUpClick,\n}) => {\n  const { state, authenticated, handleOrderSearch, dismissAlert } =\n    useOrderConfirmation(orderRef);\n\n  if (authenticated === undefined) {\n    return null;\n  }\n\n  const shouldDisplayCreateAccount =\n    !authenticated && !state.isOrderFromSearchForm;\n\n  return (\n    <Component\n      state={state}\n      dismissAlert={dismissAlert}\n      onOrderSearch={handleOrderSearch}\n      routeHome={routeHome}\n      routeSupport={routeSupport}\n      onSignUpClick={shouldDisplayCreateAccount ? onSignUpClick : undefined}\n    />\n  );\n};\n"],"names":["useBreakpoint","getBreakpoint","window","innerWidth","breakpoint","setBreakpoint","useState","useEffect","timeoutId","handleResize","clearTimeout","setTimeout","addEventListener","removeEventListener","Actions","ADD_ORDER_REFERENCE","LOADING","SET_DETAILS","ALERT","DISMISS_ALERT","AlertType","ERROR","WARNING","SUCCESS","AlertCode","INVALID_ORDER","INVALID_SEARCH","UNKNOWN","orderConfirmationReducer","state","action","type","isLoading","details","alert","isOrderFromSearchForm","fromSearchForm","undefined","ConditionalWrapper","children","className","_jsx","_Fragment","mapDetailsToSummary","orderDetails","total","isVirtual","is_virtual","grandTotal","grand_total","subtotal","shipping","total_shipping","tax","total_tax","inclTax","amount","value","currency","isTaxIncl","Aside","summary","_jsxs","OrderSummary","CartSummary","AsideElement","Main","routeHome","routeSupport","onSignUpClick","billingAddress","billing_address","customerName","firstname","customerLastName","lastname","orderNumber","number","orderStatus","status","orderEmail","email","Header","Details","Footer","MainElement","dismissAlert","onOrderSearch","OrderConfirmation","hasOrderDetails","isInvalidOrder","code","isInvalidSearch","classes","OrderSearchForm","heading","message","description","onDismiss","SvgOrderSuccess","props","React","SvgWarningFilled","HeaderSkeleton","Icon","source","OrderSuccess","size","Text","id","fields","name","order","Button","variant","onClick","defaultValue","Skeleton","SkeletonRow","fullWidth","translations","useText","postcode","handleSubmit","event","preventDefault","formValues","getFormValues","target","Card","InLineAlert","icon","WarningFilled","onSubmit","Field","Input","autocomplete","placeholder","floatingLabel","required","DetailsSkeleton","contactDetails","hasToDisplayContactDetails","shippingAddress","shipping_address","hasToDisplayShippingAddress","hasToDisplayBillingAddress","shippingMethod","shipping_method","shippingCost","shippingCurrency","hasToDisplayShippingMethod","paymentMethods","payment_methods","hasPaymentMethod","length","selectedPaymentMethod","hasToDisplayPaymentMethod","StaticSkeleton","rows","street","map","index","city","region","country_code","Price","FooterSkeleton","href","rel","Array","from","keys","i","OrderSummarySkeleton","Divider","breakdown","label","exclTax","lines","CartSummaryItem","item","taxIncluded","Sender","Recipient","price","regularPrice","priceInclTax","totalInclTax","configurations","configurableOptions","senderName","senderEmail","recipientName","recipientEmail","CartItem","title","sku","quantity","image","Image","src","alt","loading","width","height","params","weight","discounted","sale","uid","transformItems","quantity_ordered","product","thumbnail","url","product_sale_price","discount","price_range","maximum_price","regular_price","transformConfigurableOptions","__typename","gift_card","sender_name","sender_email","recipient_email","recipient_name","option","selected_options","CartSummarySkeleton","items","totalQuantity","cartItem","style","gridTemplateColumns","CartItemSkeleton","useOrderConfirmation","orderRef","dispatch","useReducer","authenticated","setAuthenticated","invalidOrder","invalidSearch","pageNotFound","unknown","buildAlert","useCallback","handleOrderSearch","fetchFormOrderDetails","customerAuthenticated","events","on","isAuthenticated","eager","off","then","catch","fetchOrderDetails","customerOrder","guestOrderByToken","error","knownAlert","console","shouldDisplayCreateAccount","Component"],"mappings":"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","x_google_ignoreList":[3,4]}